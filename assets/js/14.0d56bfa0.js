(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{434:function(t,s,a){t.exports=a.p+"assets/img/image-20210712142954547.6f8bdf47.png"},525:function(t,s,a){"use strict";a.r(s);var n=a(20),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"创建一个go模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建一个go模块"}},[t._v("#")]),t._v(" 创建一个Go模块")]),t._v(" "),n("p",[t._v("这是此教程第一次介绍Go语言的一些基础特色。如果你刚开始学Go，确保你看过了 "),n("a",{attrs:{href:"https://golang.org/doc/tutorial/getting-started.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("起步"),n("OutboundLink")],1),t._v(" 教程，它介绍了go命令，go 模块 和 很简单的Go代码。")]),t._v(" "),n("p",[t._v("在本教程中，你将创建两个模块。第一个是一个库，它将被其他库或应用程序导入。第二个是一个调用程序，它将使用第一个模块。")]),t._v(" "),n("p",[t._v("本教程的序列包括六个简短的主题，每个主题说明了语言的不同部分。")]),t._v(" "),n("ol",[n("li",[t._v("创建一个模块——编写一个小模块，里面的功能可以从另一个模块调用。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://golang.org/doc/tutorial/call-module-code.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("从另一个模块调用你的代码"),n("OutboundLink")],1),t._v(" ——导入并使用你的新模块。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://golang.org/doc/tutorial/handle-errors.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("返回和处理错误"),n("OutboundLink")],1),t._v(" —— 增加简单的错误处理。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://golang.org/doc/tutorial/random-greeting.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("返回一个随机的问候语"),n("OutboundLink")],1),t._v(" —— 处理切片中的数据（Go的动态大小数组）。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://golang.org/doc/tutorial/greetings-multiple-people.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("返回多人的问候"),n("OutboundLink")],1),t._v(" ——在Map中存储键/值对。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://golang.org/doc/tutorial/add-a-test.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("添加一个测试"),n("OutboundLink")],1),t._v(" ——使用Go内置的单元测试功能来测试你的代码。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://golang.org/doc/tutorial/compile-install.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("编译和安装应用程序"),n("OutboundLink")],1),t._v(" ——在本地编译和安装你的代码。")])]),t._v(" "),n("p",[n("strong",[t._v("Note:")]),t._v(" For other tutorials, see "),n("a",{attrs:{href:"https://golang.org/doc/tutorial/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tutorials"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("h2",{attrs:{id:"prerequisites"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" Prerequisites")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("一些编程经验.")]),t._v(" The code here is pretty simple, but it helps to know something about functions, loops, and arrays.")]),t._v(" "),n("li",[n("strong",[t._v("一个代码编辑工具.")]),t._v(" Any text editor you have will work fine. Most text editors have good support for Go. The most popular are VSCode (free), GoLand (paid), and Vim (free).")]),t._v(" "),n("li",[n("strong",[t._v("一个命令行终端.")]),t._v(" Go works well using any terminal on Linux and Mac, and on PowerShell or cmd in Windows.")])]),t._v(" "),n("h2",{attrs:{id:"开始编写一个其他人可以使用的模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开始编写一个其他人可以使用的模块"}},[t._v("#")]),t._v(" 开始编写一个其他人可以使用的模块")]),t._v(" "),n("p",[t._v("首先创建一个"),n("a",{attrs:{href:"https://golang.org/doc/code.html#Organization",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go模块"),n("OutboundLink")],1),t._v("。在一个模块中，你为一组离散而有用的功能收集成为一个或多个相关的包。例如，你可以创建一个模块，其中包含有做财务分析的功能的包，以便其他编写财务应用程序的人可以使用你的模块。")]),t._v(" "),n("p",[t._v("Go代码组成包，包组成模块。包的模块指定了Go运行代码的上下文，包括Go代码的版本 和 它需要的其他模块。")]),t._v(" "),n("p",[t._v("当您在模块中添加或改进功能时，您会发布模块的新版本。开发人员在编写调用模块功能的代码时，可以导入模块的更新包，并在投入生产使用前用新版本进行测试。")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("Open a command prompt and "),n("code",[t._v("cd")]),t._v(" to your home directory.")]),t._v(" "),n("p",[t._v("On Linux or Mac:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("cd\n")])])]),n("p",[t._v("On Windows:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("cd %HOMEPATH%\n")])])])]),t._v(" "),n("li",[n("p",[t._v("创建"),n("code",[t._v("greetings")]),t._v("目录用于存放Go模块源代码。在此编写你的模块代码:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("mkdir greetings\ncd greetings\n")])])])]),t._v(" "),n("li",[n("p",[t._v("使用"),n("a",{attrs:{href:"https://golang.org/cmd/go/#hdr-Initialize_new_module_in_current_directory",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("go mod init")]),t._v(" command"),n("OutboundLink")],1),t._v("创建一个"),n("code",[t._v("go.mod")]),t._v(" 文件开始你的模块。")]),t._v(" "),n("p",[t._v("运行 "),n("code",[t._v("go mod init")]),t._v("命令，给出你的代码所在模块的路径。这里，模块路径使用"),n("code",[t._v("example.com/greetings")]),t._v("——在生产代码中，这将是下载模块的URL。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code")])])])]),t._v(" "),n("p",[t._v("$ go mod init example.com/greetings\ngo: creating new go.mod: module example.com/greetings")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('\n`go mod init`命令创建了一个`go.mod`文件，它将你的代码标识为一个可能被其他代码使用的模块。你刚刚创建的文件只包括你的模块名称和你的代码所支持的Go版本。但是当你添加依赖关系时 -- 意味着来自其他模块的包 -- `go.mod`文件将列出要使用的特定模块版本。这样可以保持构建的可重复性，并让你直接控制要使用的模块版本。\n\n4. 在你的文本编辑器中，创建一个文件来编写你的代码，并将其称为`greetings.go`。\n\n5. 将以下代码粘贴到你的`greetings.go`文件中并保存文件。\n\n```go\npackage greetings\n\nimport "fmt"\n\n// Hello returns a greeting for the named person.\nfunc Hello(name string) string {\n    // Return a greeting that embeds the name in a message.\n    message := fmt.Sprintf("Hi, %v. Welcome!", name)\n    return message\n}\n')])])]),n("p",[t._v("这是你模块的第一段代码。它向任何要求调用的调用者返回一个问候语。你将在下一步编写调用这个函数的代码。")]),t._v(" "),n("p",[t._v("在上面的代码中，你:")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("声明了一个 "),n("code",[t._v("greetings")]),t._v(" 包来收集相关功能.")])]),t._v(" "),n("li",[n("p",[t._v("实现了一个 "),n("code",[t._v("Hello")]),t._v(" 函数，返回问候语.")]),t._v(" "),n("p",[t._v('这个函数接受一个类型为 "string "的 "name "参数，并返回一个 "string"。在Go中，一个名字以大写字母开头的函数可以被不在同一个包中的函数调用。这在Go中被称为'),n("a",{attrs:{href:"https://tour.golang.org/basics/3",target:"_blank",rel:"noopener noreferrer"}},[n("em",[t._v("exported")]),t._v(" name"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("如果一个函数的函数名以大写字母开头，那么该函数会被导出。")])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(434),alt:"image-20210712142954547"}})])]),t._v(" "),n("li",[n("p",[t._v("声明一个"),n("code",[t._v("message")]),t._v("变量来保存你的问候语。")]),t._v(" "),n("p",[t._v("在Go中，"),n("code",[t._v(":=")]),t._v("操作符是在一行中"),n("strong",[t._v("声明和初始化")]),t._v("一个变量的快捷方式（Go使用右边的值来确定变量的类型）。从长计议，你可能会写成这样:")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\nmessage "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hi, %v. Welcome!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("使用"),n("code",[t._v("fmt")]),t._v("包中的"),n("a",{attrs:{href:"https://pkg.go.dev/fmt/#Sprintf",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("Sprintf")]),t._v("函数"),n("OutboundLink")],1),t._v("来创建一个问候信息。第一个参数是一个格式字符串，"),n("code",[t._v("Sprintf")]),t._v("将"),n("code",[t._v("name")]),t._v("参数的值替换为"),n("code",[t._v("%v")]),t._v("格式动词。插入"),n("code",[t._v("name")]),t._v("参数的值就完成了问候文字。")])]),t._v(" "),n("li",[n("p",[t._v("将格式化的问候文字返回给调用者。")])])]),t._v(" "),n("h3",{attrs:{id:"小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("go mod init")]),t._v(" 命令：以当前目录为根目录创建一个模块。 此命令会创建有一个 "),n("code",[t._v("go.mod")]),t._v("文件，其中列出的了此模块中依赖的其他模块")]),t._v(" "),n("li",[t._v("如果一个函数的函数名以大写字母开头，那么该函数会被导出，可以被其他模块调用。")]),t._v(" "),n("li",[n("code",[t._v(":=")]),t._v("  声明并初始化")]),t._v(" "),n("li",[n("code",[t._v("fmt")]),t._v("格式化字符串——"),n("code",[t._v("%v")]),t._v("可以将替换字符串")])]),t._v(" "),n("h2",{attrs:{id:"从其他模块调用你的代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#从其他模块调用你的代码"}},[t._v("#")]),t._v(" 从其他模块调用你的代码")]),t._v(" "),n("p",[t._v("在"),n("a",{attrs:{href:"https://golang.org/doc/tutorial/create-module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("上一节"),n("OutboundLink")],1),t._v('中，你创建了一个 "问候 "模块。在本节中，你将编写代码，以使你可以作为应用程序执行，并调用问候模块中的代码。')]),t._v(" "),n("p",[t._v("**注：**本主题是多部分教程的一部分，从"),n("a",{attrs:{href:"https://golang.org/doc/tutorial/create-module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("创建Go模块"),n("OutboundLink")],1),t._v("开始。")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("在Go模块源码目中创建一个"),n("code",[t._v("hello")]),t._v("目录。在这里写你的调用者。")]),t._v(" "),n("p",[t._v("例如，如果你在命令提示符中的当前目录是问候语目录，你可以使用以下命令。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" hello\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" hello\n")])])])]),t._v(" "),n("li",[n("p",[t._v("在你的文本编辑器中(在hello目录下)，创建一个文件来写你的代码，并把它叫做"),n("code",[t._v("hello.go")]),t._v("。")])]),t._v(" "),n("li",[n("p",[t._v("编写代码调用"),n("code",[t._v("Hello")]),t._v("函数，然后打印函数的返回值。")]),t._v(" "),n("p",[t._v("将以下代码复制到"),n("code",[t._v("hello.go")]),t._v(" 中:")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example.com/greetings"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get a greeting message and print it.")]),t._v("\n    message "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" greetings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Gladys"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在此代码中，你:")]),t._v(" "),n("ul",[n("li",[t._v("声明了一个 "),n("code",[t._v("main")]),t._v(" 包. 在Go中，作为应用程序执行的代码必须放在主包中。.")]),t._v(" "),n("li",[t._v("导入两个包。"),n("code",[t._v("example.com/greetings")]),t._v("和"),n("code",[t._v("fmt")]),t._v("。这样你的代码就可以访问这些包中的函数。导入"),n("code",[t._v("example.com/greetings")]),t._v("(你之前创建的模块中包含的包)使你可以访问"),n("code",[t._v("Hello")]),t._v("函数。你还可以导入"),n("code",[t._v("fmt")]),t._v("，其中有处理输入和输出文本的函数（如向控制台打印文本）。")]),t._v(" "),n("li",[t._v("通过调用 "),n("code",[t._v("greetings")]),t._v("包的"),n("code",[t._v("Hello")]),t._v("函数来获取问候语。")])])]),t._v(" "),n("li",[n("p",[t._v("为这个hello包创建一个新模块。.")]),t._v(" "),n("p",[t._v("在hello目录下的命令行中，运行"),n("code",[t._v("go mod init")]),t._v('命令，给它一个你的代码将在其中的模块名称(这里，只需使用 "hello")。')]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go mod init example.com/hello\ngo: creating new go.mod: module example.com/hello\n")])])])]),t._v(" "),n("li",[n("p",[t._v("编辑"),n("code",[t._v("hello")]),t._v("模块，使用未发布的greetings模块。.")]),t._v(" "),n("p",[t._v("对于生产使用，你会把你的模块发布在服务器上，无论是在公司内部还是在互联网上，Go命令将从那里下载它们。现在，你需要调整调用者的模块，使它能在你的本地文件系统中找到greetings代码。")]),t._v(" "),n("p",[t._v("要做到这一点，对"),n("code",[t._v("hello")]),t._v("模块的go.mod文件做一个小小的改动。")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("在hello目录下，打开go.mod文件，把它改成下面的样子，然后保存文件。")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("module example"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hello\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.16")]),t._v("\n\nreplace example"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("greetings "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("greetings\n")])])]),n("p",[n("strong",[t._v("这里，"),n("a",{attrs:{href:"https://golang.org/ref/mod#tmp_15",target:"_blank",rel:"noopener noreferrer"}},[t._v("replace"),n("code",[t._v("指令")]),n("OutboundLink")],1),t._v("告诉Go用你指定的路径替换模块路径(URL"),n("code",[t._v("example.com/greetings")]),t._v(")。在本例中，就是hello目录旁边的greetings目录。")])]),t._v(" "),n("blockquote",[n("p",[t._v("或利用  "),n("a",{attrs:{href:"https://golang.org/ref/mod#go-mod-edit",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("go mod edit")]),t._v(" command"),n("OutboundLink")],1),t._v("  将Go tools 从其模块路径重定向到本地目录")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go mod edit -replace example.com/greetings"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/greetings\n")])])])]),t._v(" "),n("ol",[n("li",[t._v("在hello目录下，运行"),n("a",{attrs:{href:"https://golang.org/ref/mod#go-mod-tidy",target:"_blank",rel:"noopener noreferrer"}},[t._v("go mod tidy"),n("OutboundLink")],1),t._v("命令来同步 "),n("code",[t._v("example.com/hello")]),t._v("模块的依赖，使Go找到该模块，并将其作为依赖项添加到"),n("code",[t._v("go.mod")]),t._v("文件中。")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go mod tidy\ngo: found example.com/greetings "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" example.com/greetings v0.0.0-00010101000000-000000000000\n")])])])]),t._v(" "),n("li",[n("p",[t._v("再看go.mod，可以看到"),n("code",[t._v("go mod tidy")]),t._v("所做的改动，包括Go添加的"),n("code",[t._v("require")]),t._v("指令。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("module example.com/hello\n\ngo 1.16\n\nreplace example.com/greetings => ../greetings\n\nrequire example.com/greetings v0.0.0-00010101000000-000000000000\n")])])]),n("p",[t._v("为了构建该模块，Go在./greetings目录下找到了本地代码，然后添加了一个"),n("a",{attrs:{href:"https://golang.org/ref/mod#tmp_13",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("require")]),t._v("指令"),n("OutboundLink")],1),t._v("来指定"),n("code",[t._v("hello")]),t._v("依赖(需要)"),n("code",[t._v("example.com/greetings")]),t._v('。当你在hello.go中导入 "greetings "包（包含在greetings模块中）时，你创建了这个依赖关系。'),n("code",[t._v("replace")]),t._v("指令告诉Go在哪里可以找到"),n("code",[t._v("greetings")]),t._v("模块，因为它还没有发布。")]),t._v(" "),n("p",[t._v("要引用一个已发布的模块，"),n("code",[t._v("go.mod")]),t._v("文件将省略 "),n("code",[t._v("replace")]),t._v("指令，而使用"),n("code",[t._v("require")]),t._v("指令，并在末尾标注版本号。")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("require example"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("greetings v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n")])])])])])]),t._v(" "),n("li",[n("p",[t._v("在hello目录下，运行代码，以确定其是否能工作")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hello\nHi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Gladys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" Welcome"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])])])]),t._v(" "),n("p",[t._v("恭喜你！你已经写了两个功能模块。在教程的"),n("a",{attrs:{href:"https://golang.org/doc/tutorial/handle-errors.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("下一个主题"),n("OutboundLink")],1),t._v("中，你将添加一些错误处理。")]),t._v(" "),n("h3",{attrs:{id:"小结-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结-2"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("import")]),t._v("可以导入多个包，其一般形式为：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n \t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example.com/greetings"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("replace")]),t._v("命令可以将模块路径替换为指定的路径，这样就可以引用本地模块了。其一般形如下:")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("replace example"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("greetings "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("greetings\n")])])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("go mod tidy")]),t._v("命令可以同步"),n("code",[t._v("go.mod")]),t._v("文件中的依赖")])])]),t._v(" "),n("h2",{attrs:{id:"返回并处理错误"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#返回并处理错误"}},[t._v("#")]),t._v(" 返回并处理错误")]),t._v(" "),n("p",[t._v("处理错误是健壮代码的一个基本特征。在本节中，你将添加一点代码，从greetings模块返回一个错误，然后在调用者中处理它。")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("在"),n("code",[t._v("greetings/greetings.go")]),t._v("中，添加以下代码。")]),t._v(" "),n("p",[t._v("如果不知道要问候谁，发回问候就没有意义了。如果名字是空的，就返回一个错误给调用者。将下面的代码复制到"),n("code",[t._v("greetings.go")]),t._v("中并保存文件。")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" greetings\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"errors"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello returns a greeting for the named person.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If no name was given, return an error with a message.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" errors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"empty name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If a name was received, return a value that embeds the name ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in a greeting message.")]),t._v("\n    message "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hi, %v. Welcome!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在此代码中，你:")]),t._v(" "),n("ul",[n("li",[t._v("修改函数，使其返回两个值：一个"),n("code",[t._v("string")]),t._v("和一个"),n("code",[t._v("error")]),t._v("。你的调用者将检查第二个值，看看是否发生了错误。(任何Go函数都可以"),n("a",{attrs:{href:"https://golang.org/doc/effective_go.html#multiple-returns",target:"_blank",rel:"noopener noreferrer"}},[t._v("返回多个值"),n("OutboundLink")],1),t._v("。)")]),t._v(" "),n("li",[t._v("导入Go标准库"),n("code",[t._v("errors")]),t._v("包，这样你就可以使用它的"),n("a",{attrs:{href:"https://golang.org/pkg/errors/#example_New",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("errors.New")]),t._v("函数"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("li",[t._v("添加一个"),n("code",[t._v("if")]),t._v("语句来检查是否有无效的请求(名称应该是一个空字符串)，如果请求无效则返回一个错误。"),n("code",[t._v("errors.New")]),t._v("函数返回一个"),n("code",[t._v("error")]),t._v("，里面有你的信息。")]),t._v(" "),n("li",[t._v("在成功返回中加入"),n("code",[t._v("nil")]),t._v("（意为没有错误）作为第二个值。这样，调用者就可以看到函数成功了。")])])]),t._v(" "),n("li",[n("p",[t._v("在你的"),n("code",[t._v("hello/hello.go")]),t._v("文件中，处理现在由"),n("code",[t._v("Hello")]),t._v("函数返回的错误，以及非错误值。")]),t._v(" "),n("p",[t._v("将以下代码粘贴到"),n("code",[t._v("hello.go")]),t._v("中。")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log"')]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example.com/greetings"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set properties of the predefined Logger, including")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the log entry prefix and a flag to disable printing")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the time, source file, and line number.")]),t._v("\n    log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetPrefix")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"greetings: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetFlags")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Request a greeting message.")]),t._v("\n    message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" greetings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If an error was returned, print it to the console and")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// exit the program.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If no error was returned, print the returned message")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to the console.")]),t._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在此代码中，你:")]),t._v(" "),n("ul",[n("li",[t._v("配置"),n("a",{attrs:{href:"https://golang.org/pkg/log/",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("log")]),t._v("包"),n("OutboundLink")],1),t._v('在其日志消息的开头打印命令名("greetings：")，不含时间戳或源文件信息。')]),t._v(" "),n("li",[t._v('将包括 "error "在内的两个 "Hello "返回值分配给变量。')]),t._v(" "),n("li",[t._v("将"),n("code",[t._v("Hello")]),t._v("参数中Gladys的名字改为空字符串，这样你就可以尝试一下你的错误处理代码。")]),t._v(" "),n("li",[t._v("寻找一个非零的"),n("code",[t._v("error")]),t._v("值。在这种情况下继续下去是没有意义的。")]),t._v(" "),n("li",[t._v("使用标准库的"),n("code",[t._v("log包")]),t._v("中的函数来输出错误信息。如果你得到一个错误，你使用"),n("code",[t._v("log")]),t._v("包的"),n("a",{attrs:{href:"https://pkg.go.dev/log?tab=doc#Fatal",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("Fatal")]),t._v("函数"),n("OutboundLink")],1),t._v("来打印错误并"),n("strong",[t._v("停止程序")]),t._v("。")])])]),t._v(" "),n("li",[n("p",[t._v("在hello目录下的命令行，运行"),n("code",[t._v("hello.go")]),t._v("来确认代码是否有效。")]),t._v(" "),n("p",[t._v("现在你传入的是一个空名字，你会得到一个错误。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go run "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\ngreetings: empty name\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" status "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])])])]),t._v(" "),n("p",[t._v("这基本上是Go中错误处理的工作方式。把一个错误作为一个值返回，这样调用者就可以检查它。这很简单。在本教程的"),n("a",{attrs:{href:"https://golang.org/doc/tutorial/random-greeting.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("下一主题"),n("OutboundLink")],1),t._v("中，你将使用Go切片来返回一个随机选择的问候语。")]),t._v(" "),n("h3",{attrs:{id:"小结-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结-3"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("如何返回错误： 在方法的返回值中返回错误")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("错误定义在"),n("code",[t._v("errors")]),t._v("包中，创建一个error可以使用 "),n("code",[t._v('errors.New("empty name")')])])]),t._v(" "),n("li",[n("p",[t._v("如何处理错误，一般形式为:")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),n("h2",{attrs:{id:"返回一个随机问候语"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#返回一个随机问候语"}},[t._v("#")]),t._v(" 返回一个随机问候语")]),t._v(" "),n("p",[t._v("在本节中，您将修改您的代码，使其不再每次返回一个单一的问候语，而是返回几个预定义的问候语中的一个。")]),t._v(" "),n("p",[t._v("要做到这一点，你将使用一个Go slice。一个 "),n("a",{attrs:{href:"https://blog.golang.org/slices-intro",target:"_blank",rel:"noopener noreferrer"}},[n("em",[t._v("slice")]),n("OutboundLink")],1),t._v(" 就像一个数组，只不过它的大小是随着你添加和删除项目而动态调整的。它是 Go 中最有用的类型之一。您将添加一个小片来包含三条问候信息，然后让您的代码随机返回其中一条信息。")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("在"),n("code",[t._v("greetings/greetings.go")]),t._v("中，修改你的代码，使其看起来像下面这样。")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" greetings\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"errors"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"math/rand"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello returns a greeting for the named person.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If no name was given, return an error with a message.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" errors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"empty name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a message using a random format.")]),t._v("\n    message "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomFormat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// init sets initial values for variables used in the function.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Seed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("UnixNano")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// randomFormat returns one of a set of greeting messages. The returned")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// message is selected at random.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomFormat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A slice of message formats.")]),t._v("\n    formats "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hi, %v. Welcome!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Great to see you, %v!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hail, %v! Well met!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return a randomly selected message format by specifying")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a random index for the slice of formats.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" formats"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Intn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("formats"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在此代码中，你:")]),t._v(" "),n("ul",[n("li",[t._v("增加一个"),n("code",[t._v("randomFormat")]),t._v("函数，为问候信息返回一个随机选择的格式。请注意，"),n("strong",[n("code",[t._v("randomFormat")]),t._v("以小写字母开头，使得它只能被自己包中的代码访问（换句话说，它不能被导出）。")])]),t._v(" "),n("li",[t._v("在"),n("code",[t._v("randomFormat")]),t._v("中，声明一个"),n("code",[t._v("formats")]),t._v("分片，有三种消息格式。当声明一个分片时，你在括号中省略它的大小，像这样。"),n("code",[t._v("[]string")]),t._v(". 这告诉Go，分片的底层数组可以动态调整大小。")]),t._v(" "),n("li",[t._v("使用"),n("a",{attrs:{href:"https://golang.org/pkg/math/rand/",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("math/rand")]),t._v("包"),n("OutboundLink")],1),t._v("生成一个随机数，用于从切片中选择一个项目。")]),t._v(" "),n("li",[t._v("增加一个"),n("a",{attrs:{href:"https://golang.org/doc/effective_go.html#init",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("init")]),t._v("函数"),n("OutboundLink")],1),t._v("，为"),n("code",[t._v("rand")]),t._v("包添加当前时间的种子。"),n("strong",[t._v("在全局变量初始化后，Go会在程序启动时自动执行"),n("code",[t._v("init")]),t._v("函数。")])]),t._v(" "),n("li",[t._v("在 "),n("code",[t._v("Hello")]),t._v("中，调用"),n("code",[t._v("randomFormat")]),t._v("函数来获取你要返回的消息的格式，然后使用格式和 "),n("code",[t._v("name")]),t._v("值一起创建消息。")]),t._v(" "),n("li",[t._v("像之前那样返回信息（或错误）。")])])]),t._v(" "),n("li",[n("p",[t._v("在"),n("code",[t._v("hello/hello.go")]),t._v("中，将其中代码更改为以下内容")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log"')]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example.com/greetings"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set properties of the predefined Logger, including")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the log entry prefix and a flag to disable printing")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the time, source file, and line number.")]),t._v("\n    log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetPrefix")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"greetings: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetFlags")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Request a greeting message.")]),t._v("\n    message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" greetings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Gladys"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If an error was returned, print it to the console and")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// exit the program.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If no error was returned, print the returned message")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to the console.")]),t._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("在命令行，切换到hello目录下，然后运行"),n("code",[t._v("hello.go")]),t._v("，确认代码有效。多次运行，注意问候语的变化")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go run "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\nGreat to see you, Gladys"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n$ go run "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\nHi, Gladys. Welcome"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n$ go run "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\nHail, Gladys"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Well met"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])])])]),t._v(" "),n("p",[t._v("这就是对Go 分片的介绍。为了让这种类型得到更多的使用，你将使用一个分片来向多个人打招呼。这在教程的"),n("a",{attrs:{href:"https://golang.org/doc/tutorial/greetings-multiple-people.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("下一主题"),n("OutboundLink")],1),t._v("中。")]),t._v(" "),n("h3",{attrs:{id:"小结-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结-4"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("以小写字母开头的方法，只能被自己包中的代码访问（换句话说，它不能被导出）")])]),t._v(" "),n("li",[n("p",[t._v("声明并初始化一个slice：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("formats "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aaa"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bbb"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("在全局变量初始化后，Go会在程序启动时自动执行"),n("code",[t._v("init")]),t._v("函数。")])])]),t._v(" "),n("h2",{attrs:{id:"为多个人返回问候语"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为多个人返回问候语"}},[t._v("#")]),t._v(" 为多个人返回问候语")]),t._v(" "),n("p",[t._v("在你对模块代码的最后一次修改中，你将添加支持在一个请求中获取多人的问候。换句话说，你将处理一个多值输入和对值与多值输出。")]),t._v(" "),n("p",[t._v("要做到这一点，你需要向一个函数传递一组名字，该函数可以为每个名字返回一个问候语。将"),n("code",[t._v("Hello")]),t._v("函数的参数从一个名字改为一组名字会改变函数的签名。如果你已经发布了"),n("code",[t._v("greetings")]),t._v("模块，而用户已经编写了调用"),n("code",[t._v("Hello")]),t._v("的代码，这种改变会破坏他们的程序。在这种情况下，更好的选择是给新功能起一个新的名字。")]),t._v(" "),n("p",[t._v("在本教程将要添加的最后一段代码中，更新代码，就像你已经发布了一个 "),n("code",[t._v("greetings")]),t._v("模块的版本一样。不要改变"),n("code",[t._v("Hello")]),t._v("函数，而是添加一个新的函数"),n("code",[t._v("Hellos")]),t._v("，它接受一组名字。然后，为了简单起见，让新函数调用现有函数。将这两个函数保留在包中，为现有的调用者（或未来只需要一个问候语的调用者）留下原来的函数，为想要扩展功能的调用者增加一个新函数。")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("在greetings/greetings.go中，修改你的代码，使其看起来像下面这样。")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" greetings\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"errors"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"math/rand"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello returns a greeting for the named person.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If no name was given, return an error with a message.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" errors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"empty name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a message using a random format.")]),t._v("\n    message "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomFormat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hellos returns a map that associates each of the named people")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// with a greeting message.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hellos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("names "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A map to associate names with messages.")]),t._v("\n    messages "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Loop through the received slice of names, calling")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the Hello function to get a message for each name.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v(" names "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// In the map, associate the retrieved message with ")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the name.")]),t._v("\n        messages"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" message\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" messages"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Init sets initial values for variables used in the function.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Seed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("UnixNano")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// randomFormat returns one of a set of greeting messages. The returned")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// message is selected at random.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomFormat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A slice of message formats.")]),t._v("\n    formats "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hi, %v. Welcome!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Great to see you, %v!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hail, %v! Well met!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return one of the message formats selected at random.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" formats"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Intn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("formats"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在此代码中，你:")]),t._v(" "),n("ul",[n("li",[t._v("增加一个 "),n("code",[t._v("Hellos")]),t._v("函数，其参数是一个"),n("em",[t._v("names")]),t._v("的切片，而不是一个name。另外，你把它的一个返回类型从 "),n("code",[t._v("string")]),t._v("改为"),n("code",[t._v("map")]),t._v("，这样你就可以返回映射到问候信息的名字。")]),t._v(" "),n("li",[t._v("让新的Hellos函数调用现有的Hello函数。这样，两个函数都会留在原地。")]),t._v(" "),n("li",[t._v("创建一个"),n("code",[t._v("messages")]),n("a",{attrs:{href:"https://blog.golang.org/maps",target:"_blank",rel:"noopener noreferrer"}},[t._v("map"),n("OutboundLink")],1),t._v("，将每个接收到的名字（作为键）与生成的消息（作为值）关联起来。在Go中，你用以下语法初始化一个map。"),n("strong",[t._v("make(map[key-type]"),n("em",[t._v("value-type")]),t._v(")")]),t._v("。你让"),n("code",[t._v("Hellos")]),t._v("函数把这个地图返回给调用者。")]),t._v(" "),n("li",[t._v('循环检查你的函数收到的名称，检查每个名称是否有一个非空值，然后为每个名称关联一个消息。在这个 "for "循环中，"range "返回两个值：循环中当前项的索引和项的值的副本。你不需要索引，所以你使用Go'),n("a",{attrs:{href:"https://golang.org/doc/effective_go.html#blank",target:"_blank",rel:"noopener noreferrer"}},[t._v("空白标识符（下划线）"),n("OutboundLink")],1),t._v("来忽略它。")])])]),t._v(" "),n("li",[n("p",[t._v("在你的"),n("code",[t._v("hello/hello.go")]),t._v("调用代码中，传递一片names，然后打印你得到的"),n("code",[t._v("names/essages map")]),t._v("的内容。")]),t._v(" "),n("p",[t._v("在"),n("code",[t._v("hello.go")]),t._v("中，修改你的代码，使其看起来像下面。")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log"')]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example.com/greetings"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set properties of the predefined Logger, including")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the log entry prefix and a flag to disable printing")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the time, source file, and line number.")]),t._v("\n    log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetPrefix")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"greetings: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetFlags")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A slice of names.")]),t._v("\n    names "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Gladys"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Samantha"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Darrin"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Request greeting messages for the names.")]),t._v("\n    messages"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" greetings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hellos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("names"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If no error was returned, print the returned map of")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// messages to the console.")]),t._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("messages"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("有了这些变化，你:")]),t._v(" "),n("ul",[n("li",[t._v('创建一个 "names "变量，作为一个分片类型，容纳三个名字。')]),t._v(" "),n("li",[t._v("将"),n("code",[t._v("names")]),t._v("变量作为参数传递给"),n("code",[t._v("Hellos")]),t._v("函数。")])])]),t._v(" "),n("li",[n("p",[t._v("在命令行，切换到"),n("code",[t._v("hello/hello.go")]),t._v("的目录下，然后运行"),n("code",[t._v("hello.go")]),t._v("来确认代码是否有效。")]),t._v(" "),n("p",[t._v("输出应该是一个将名字和消息关联起来的地图的字符串表示，就像下面这样。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go run "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\nmap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Darrin:Hail, Darrin"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Well met"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Gladys:Hi, Gladys. Welcome"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Samantha:Hail, Samantha"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Well met"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])])]),t._v(" "),n("p",[t._v("本主题介绍了表示名称/值对的Map。它还介绍了"),n("a",{attrs:{href:"https://blog.golang.org/module-compatibility",target:"_blank",rel:"noopener noreferrer"}},[t._v("保留向后兼容性"),n("OutboundLink")],1),t._v("的想法，即通过为模块中的新功能或改变的功能实现一个新功能。在本教程的"),n("a",{attrs:{href:"https://golang.org/doc/tutorial/add-a-test.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("下一个主题"),n("OutboundLink")],1),t._v("中，你将使用内置功能为你的代码创建一个单元测试。")]),t._v(" "),n("h3",{attrs:{id:"小结-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结-5"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("定义map的一般形式")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("# "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("创建一个map")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("迭代map")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v(" somemap "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),n("h2",{attrs:{id:"添加一个测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加一个测试"}},[t._v("#")]),t._v(" 添加一个测试")]),t._v(" "),n("p",[t._v("现在你已经把你的代码稳定下来了（顺便说一句，做得很好），添加一个测试。在开发过程中测试你的代码可以暴露出错误，这些错误会在你进行修改时发现。在这个主题中，你为Hello函数添加了一个测试。")]),t._v(" "),n("p",[t._v("Go对单元测试的内置支持使您更容易进行测试。具体来说，使用命名惯例、Go的 "),n("code",[t._v("testing")]),t._v("包和 "),n("code",[t._v("go test")]),t._v("命令，你可以快速编写和执行测试。")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("在"),n("code",[t._v("greetings")]),t._v("目录下，创建一个名为"),n("code",[t._v("greetings_test.go")]),t._v("的文件。")]),t._v(" "),n("p",[t._v("以"),n("code",[t._v("_test.go")]),t._v("作为文件名的结尾，告诉"),n("code",[t._v("go test")]),t._v("命令这个文件包含测试函数。")])]),t._v(" "),n("li",[n("p",[t._v("在"),n("code",[t._v("greetings_test.go")]),t._v("中，粘贴以下代码并保存文件。")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" greetings\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testing"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"regexp"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TestHelloName calls greetings.Hello with a name, checking ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for a valid return value.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("TestHelloName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("testing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Gladys"')]),t._v("\n    want "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" regexp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MustCompile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("`\\b`")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("`\\b`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Gladys"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("want"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MatchString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`Hello("Gladys") = %q, %v, want match for %#q, nil`')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" want"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TestHelloEmpty calls greetings.Hello with an empty string, ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// checking for an error.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("TestHelloEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("testing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" msg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`Hello("") = %q, %v, want "", error`')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在此代码中，你:")]),t._v(" "),n("ul",[n("li",[t._v("在与你要测试的代码相同的包中实现测试函数。")]),t._v(" "),n("li",[t._v("创建了2个测试函数去测试"),n("code",[t._v("greetings.Hello")]),t._v("函数。测试函数名名为"),n("em",[t._v("Test"),n("strong",[t._v("Name")])]),t._v("，***Name***指定要测试的函数。测试函数接受"),n("a",{attrs:{href:"https://golang.org/pkg/testing/",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("testing")]),t._v(" package's"),n("OutboundLink")],1),t._v(" "),n("code",[t._v("testing.T")]),t._v("做为一个参数。你可以使用这个参数的方法用于测试的报告或记录日志。")]),t._v(" "),n("li",[t._v("实现了2个测试:\n"),n("ul",[n("li",[n("code",[t._v("TestHelloName")]),t._v(" calls the "),n("code",[t._v("Hello")]),t._v(" function, passing a "),n("code",[t._v("name")]),t._v(" value with which the function should be able to return a valid response message. If the call returns an error or an unexpected response message (one that doesn't include the name you passed in), you use the "),n("code",[t._v("t")]),t._v(" parameter's "),n("code",[t._v("Fatalf")]),t._v(" method to print a message to the console and end execution.")]),t._v(" "),n("li",[n("code",[t._v("TestHelloEmpty")]),t._v(" calls the "),n("code",[t._v("Hello")]),t._v(" function with an empty string. This test is designed to confirm that your error handling works. If the call returns a non-empty string or no error, you use the "),n("code",[t._v("t")]),t._v(" parameter's "),n("a",{attrs:{href:"https://golang.org/pkg/testing/#T.Fatalf",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("Fatalf")]),t._v(" method"),n("OutboundLink")],1),t._v(" to print a message to the console and end execution.")])])])])]),t._v(" "),n("li",[n("p",[t._v("在命令行中的greetings目录中，执行"),n("code",[t._v("go test")]),t._v("命令执行测试。")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://golang.org/cmd/go/#hdr-Test_packages",target:"_blank",rel:"noopener noreferrer"}},[t._v("go test"),n("OutboundLink")],1),t._v("命令执行测试文件（名称以"),n("code",[t._v("_test.go")]),t._v("结尾）中的测试函数（名称以"),n("code",[t._v("Test")]),t._v("开头）。可以添加"),n("code",[t._v("-v")]),t._v("标记来查看详细输出。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\nPASS\nok      example.com/greetings   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".364s\n\n$ go "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" -v\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RUN   TestHelloName\n--- PASS: TestHelloName "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".00s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RUN   TestHelloEmpty\n--- PASS: TestHelloEmpty "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".00s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   PASS\n   ok      example.com/greetings   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".372s\n")])])])]),t._v(" "),n("li",[n("p",[t._v("破话 "),n("code",[t._v("greetings.Hello")]),t._v(" 函数来看以下测试失败的情况.")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello returns a greeting for the named person.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If no name was given, return an error with a message.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" errors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"empty name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a message using a random format.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// message := fmt.Sprintf(randomFormat(), name)")]),t._v("\n    message "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sprint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomFormat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("在命令行运行， "),n("code",[t._v("go test")]),t._v("执行测试")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n--- FAIL: TestHelloName "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".00s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    greetings_test.go:15: Hello"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Gladys"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hail, %v! Well met!"')]),t._v(", "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("nil"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(", want match "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("bGladys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(", nil\nFAIL\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" status "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nFAIL    example.com/greetings   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".182s\n")])])])])]),t._v(" "),n("h3",{attrs:{id:"小结-6"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结-6"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),n("ul",[n("li",[t._v("以"),n("code",[t._v("_test.go")]),t._v("作为文件名的结尾，告诉"),n("code",[t._v("go test")]),t._v("命令这个文件包含测试函数。")]),t._v(" "),n("li",[t._v("测试函数接受"),n("a",{attrs:{href:"https://golang.org/pkg/testing/",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("testing")]),t._v(" package's"),n("OutboundLink")],1),t._v(" "),n("code",[t._v("testing.T")]),t._v("做为一个参数。你可以使用这个参数的方法用于测试的报告或记录日志。")])]),t._v(" "),n("h2",{attrs:{id:"编译和安装应用程序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编译和安装应用程序"}},[t._v("#")]),t._v(" 编译和安装应用程序")]),t._v(" "),n("p",[t._v("在这最后一个主题中，你将学习几个新的go命令。虽然"),n("code",[t._v("go run")]),t._v("命令是一个有用的快捷方式，当你频繁地进行修改时，它可以编译和运行一个程序，但它不会生成一个二进制的可执行文件。")]),t._v(" "),n("p",[t._v("本主题介绍了两个额外的指令，用于构建代码:")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://golang.org/cmd/go/#hdr-Compile_packages_and_dependencies",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("go build")]),t._v(" command"),n("OutboundLink")],1),t._v(" : 编译包及其依赖，但是不会安装编译后的结果")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://golang.org/ref/mod#go-install",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("go install")]),t._v(" command"),n("OutboundLink")],1),t._v(" : 编译并安装包")])]),t._v(" "),n("p",[t._v("1.在命令行中，切换到"),n("code",[t._v("hello")]),t._v("目录，运行"),n("code",[t._v("go build")]),t._v("命令，将代码编译为可执行的二进制文件")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go build\n")])])]),n("p",[t._v("2.在命令行中，切换到"),n("code",[t._v("hello")]),t._v("目录,运行编译生成的"),n("code",[t._v("hello")]),t._v("命令，确认代码工作正常")]),t._v(" "),n("p",[t._v("注意，编译后的结果取决于你的系统:")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("在Linux 或 Mac上")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ ./hello\nmap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Darrin:Great to see you, Darrin"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Gladys:Hail, Gladys"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Well met"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Samantha:Hail, Samantha"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Well met"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("在Window上")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ hello.exe\nmap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Darrin:Great to see you, Darrin"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Gladys:Hail, Gladys"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Well met"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Samantha:Hail, Samantha"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Well met"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])])]),t._v(" "),n("p",[t._v("你已经将应用编译成了可执行文件。但是要正确运行该文件，你要么需要在正确的目录中运行该文件，要么需要指定可执行文件的路径。")]),t._v(" "),n("p",[t._v("接下来，你会安装可执行文件，这样不用指定文件的路径就能够运行该文件了。")]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[n("p",[t._v("找到Go安装路径，go 命令会将当前包安装在此路径下")]),t._v(" "),n("p",[t._v("可以运行"),n("a",{attrs:{href:"https://golang.org/cmd/go/#hdr-List_packages_or_modules",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("go list")]),t._v(" command"),n("OutboundLink")],1),t._v(" 命令查询Go的安装路径")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go list -f "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{{.Target}}'")]),t._v("\n")])])]),n("p",[t._v("例如，命令行可能输出 "),n("code",[t._v("/home/gopher/bin/hello")]),t._v(", 这意味着二进制文件会被安装到 "),n("code",[t._v("/home/gopher/bin")]),t._v("中。下一步汇总会用到此目录")])]),t._v(" "),n("li",[n("p",[t._v("将Go安装目录添加到系统的shell目录中")])])]),t._v(" "),n("p",[t._v("这样，你就可以运行可执行程序而不用指定可执行程序的位置。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("在Linux 或 Mac,运行以下命令:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v(":/path/to/your/install/directory\n")])])])]),t._v(" "),n("li",[n("p",[t._v("在Windows上，运行以下命令:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")]),t._v("%"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("C:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("to"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("your"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("install"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("directory\n")])])])])]),t._v(" "),n("p",[t._v("最为一种替代方案，你已经有一个像"),n("code",[t._v("$HOME/bin")]),t._v("这样的目录在shell路径中，你想安装Go程序到此路径，你可以使用"),n("a",{attrs:{href:"https://golang.org/cmd/go/#hdr-Print_Go_environment_information",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("go env")]),t._v(" 命令"),n("OutboundLink")],1),t._v("通过设置GOBIN变量改变安装目标。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("go "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" -w "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOBIN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/path/to/your/bin\n")])])]),n("p",[t._v("或")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("go "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" -w "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOBIN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("C:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("to"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("your"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("bin\n")])])]),n("ol",{attrs:{start:"5"}},[n("li",[t._v("一旦你已经更新了shell 路径，运行"),n("code",[t._v("go install")]),t._v("命令去编译并安装包:")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),n("ol",{attrs:{start:"6"}},[n("li",[t._v("简单地输入名称即可运行你的程序")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ hello\nmap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Darrin:Hail, Darrin"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Well met"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Gladys:Great to see you, Gladys"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Samantha:Hail, Samantha"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Well met"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("h3",{attrs:{id:"小结-7"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结-7"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://golang.org/cmd/go/#hdr-Compile_packages_and_dependencies",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("go build")]),t._v(" command"),n("OutboundLink")],1),t._v(" : 编译包及其依赖，但是不会安装编译后的结果")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://golang.org/ref/mod#go-install",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("go install")]),t._v(" command"),n("OutboundLink")],1),t._v(" : 编译并安装包")])]),t._v(" "),n("h2",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://golang.org/doc/tutorial/create-module",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tutorial: Create a Go module"),n("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{538:function(t,a,s){"use strict";s.r(a);var n=s(20),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_7-继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-继承"}},[t._v("#")]),t._v(" 7 继承")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#继承基础"}},[t._v("继承基础")])]),s("li",[s("a",{attrs:{href:"#成员访问和继承"}},[t._v("成员访问和继承")])]),s("li",[s("a",{attrs:{href:"#构造函数和继承"}},[t._v("构造函数和继承")]),s("ul",[s("li",[s("a",{attrs:{href:"#使用super关键字调用父类构造函数"}},[t._v("使用super关键字调用父类构造函数")])]),s("li",[s("a",{attrs:{href:"#使用super访问父类成员"}},[t._v("使用super访问父类成员")])]),s("li",[s("a",{attrs:{href:"#构造函数执行顺序"}},[t._v("构造函数执行顺序")])])])]),s("li",[s("a",{attrs:{href:"#父类引用和子类对象"}},[t._v("父类引用和子类对象")])]),s("li",[s("a",{attrs:{href:"#方法重写"}},[t._v("方法重写")]),s("ul",[s("li",[s("a",{attrs:{href:"#重写方法支持多态"}},[t._v("重写方法支持多态")])]),s("li",[s("a",{attrs:{href:"#为什么要重写方法"}},[t._v("为什么要重写方法？")])])])]),s("li",[s("a",{attrs:{href:"#使用抽象方法"}},[t._v("使用抽象方法")])]),s("li",[s("a",{attrs:{href:"#使用final"}},[t._v("使用final")]),s("ul",[s("li",[s("a",{attrs:{href:"#final阻止重写"}},[t._v("final阻止重写")])]),s("li",[s("a",{attrs:{href:"#final阻止继承"}},[t._v("final阻止继承")])]),s("li",[s("a",{attrs:{href:"#使用final修饰成员"}},[t._v("使用final修饰成员")])])])]),s("li",[s("a",{attrs:{href:"#object类"}},[t._v("Object类")])])])]),s("p"),t._v(" "),s("p",[t._v("Java中，被继承的类叫做父类（superclass），继承的类叫做子类（subclass）。因此，子类是一种特殊的父类，它继承了父类的所有变量和方法，并能够添加自己独有的元素。")]),t._v(" "),s("h2",{attrs:{id:"继承基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承基础"}},[t._v("#")]),t._v(" 继承基础")]),t._v(" "),s("p",[t._v("继承的关键字是"),s("code",[t._v("extends")]),t._v(". 例子:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TwoDShape")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showDim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Width and height are "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" width "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" and "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Triangle")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TwoDShape")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("area")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" width "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showStyle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Triangle is "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" sytle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("继承通用形式:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" subclass"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" superclass"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// body of class")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Java 只支持单继承，一个子类不能同时继承多个父类。")]),t._v(" "),s("p",[t._v("继承最主要的优势是：将通用的属性进行抽取，子类只需关注特定的属性即可。")]),t._v(" "),s("h2",{attrs:{id:"成员访问和继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#成员访问和继承"}},[t._v("#")]),t._v(" 成员访问和继承")]),t._v(" "),s("p",[t._v("第6章中说道，private成员无法被类外的代码访问，这条规则对于子类也不例外。也就是说，即使子类继承了父类所有的成员，但是它无法访问父类中的private成员，即子类不会继承父类中的private成员。")]),t._v(" "),s("h2",{attrs:{id:"构造函数和继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造函数和继承"}},[t._v("#")]),t._v(" 构造函数和继承")]),t._v(" "),s("p",[t._v("在继承中，父类和子类都有构造函数，那么那个构造函数负责构造子类——父类中的，子类中的 还是两者都要？答案是，父类中的构造函数负责构造对象中属于父类的那部分，子类中的构造函数负责构造对象中属于子类的那部分。这是有道理的，因为父类不知道、或无法访问子类中的元素。因此，它们的构造函数必须分开。")]),t._v(" "),s("h3",{attrs:{id:"使用super关键字调用父类构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用super关键字调用父类构造函数"}},[t._v("#")]),t._v(" 使用super关键字调用父类构造函数")]),t._v(" "),s("p",[t._v("调用父类构造函数的一般形式:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("super(parameter-list);\n")])])]),s("p",[s("code",[t._v("super()")]),t._v("语句必须要在子类构造函数的第一句，且不能与 "),s("code",[t._v("this()")]),t._v("共存。在子类默认生成的无参构造函数中，会默认调用"),s("code",[t._v("super()")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"使用super访问父类成员"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用super访问父类成员"}},[t._v("#")]),t._v(" 使用super访问父类成员")]),t._v(" "),s("p",[t._v("使用super访问父类成员的一般形式:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("member\n")])])]),s("blockquote",[s("p",[t._v("member可以是方法或实例变量")])]),t._v(" "),s("h3",{attrs:{id:"构造函数执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造函数执行顺序"}},[t._v("#")]),t._v(" 构造函数执行顺序")]),t._v(" "),s("p",[t._v("父类构造函数先执行，再是子类构造函数执行。因为在初始化子类时，必须要先对父类进行初始化。")]),t._v(" "),s("h2",{attrs:{id:"父类引用和子类对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父类引用和子类对象"}},[t._v("#")]),t._v(" 父类引用和子类对象")]),t._v(" "),s("p",[t._v("Java是强类型语言，通常一种类型的对象的引用不能指向另一种类型的对象，即一个对象的引用只能指向其自身的类型。")]),t._v(" "),s("p",[t._v("但是，有一个例外，就是父类的引用可以指向子类对象。这里有一个很重要的点要理解，是"),s("strong",[t._v("引用变量的类型，而不是引用变量指向的对象的类型——决定了可以访问什么成员")]),t._v("。即，当父类的引用指向子类对象时，父类的引用只能够访问父类中的成员，不能访问子类中定义的成员。这里有道理的，因为父类不知道子类中有什么东西。")]),t._v(" "),s("h2",{attrs:{id:"方法重写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法重写"}},[t._v("#")]),t._v(" 方法重写")]),t._v(" "),s("p",[t._v("子类可以重写父类中的方法")]),t._v(" "),s("h3",{attrs:{id:"重写方法支持多态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重写方法支持多态"}},[t._v("#")]),t._v(" 重写方法支持多态")]),t._v(" "),s("p",[t._v("方法重写是Java中最强大的概念: 动态方法分发(dynamic method dispatch) 的基础。 动态方法分发是一种机制，通过这种机制，对重写方法的调用是在运行时解析的，而不时编译时。动态方法分发很最重要，因为这是Java实现运行时多态的方式。")]),t._v(" "),s("p",[t._v("再重申一下一个重要的原则： 父类引用可以指向子类对象。Java利用此规则在运行时解析对于重写方法的调用。当一个重写方法通过父类引用调用时，Java会根据调用发生时父类引用所指向的对象的类型来决定执行哪个方法。因此，这个决定是在运行时做出的。当引用不同类型的对象时，会调用不同的重写方法。换句话说， ***被指向的对象的类型（不是引用变量的类型）*决定了哪个重写方法会执行。**因此，如果一个父类的方法被子类重写，当父类引用执行不同类型的对象时，会调用不同的方法。示例如下:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sup")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"who() in Sup"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sub1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sup")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"who() in Sub1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sub2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sup")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"who() in Sub2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sup")]),t._v(" superOb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sub1")]),t._v(" subOb1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sub1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sub2")]),t._v(" subOb2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sub2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sup")]),t._v(" supRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    supRef "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" superOb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    supRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    supRef "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" subOb1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    supRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    supRef "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" subOb2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    supRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("运行结果:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("who() in Sup\nwho() in Sub1\nwho() in Sub2\n")])])]),s("h3",{attrs:{id:"为什么要重写方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要重写方法"}},[t._v("#")]),t._v(" 为什么要重写方法？")]),t._v(" "),s("p",[t._v('如前所示，重写方法让Java可以实现运行时多态。而多态对于面向对象至关重要，其中一个原因是:  它允许一个通用类指定其所有派生类共有的方法，同时允许子类定义部分或全部方法的具体实现。重写方法是Java实现多态性的 "一个接口，多个方法 "的另一种方式。成功应用多态性的部分关键在于理解父类和子类形成了一个层次结构，从较小的特殊化到较大的特殊化。父类提供了子类可以直接使用的所有元素。它还定义了那些派生类必须自己实现的方法。这允许子类灵活地定义它0自己的方法，但仍要执行一个一致的接口。因此，通过结合继承和重写方法，父类可以定义所有子类将使用的方法的一般形式。')]),t._v(" "),s("h2",{attrs:{id:"使用抽象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用抽象方法"}},[t._v("#")]),t._v(" 使用抽象方法")]),t._v(" "),s("p",[t._v("抽象方法一般形式:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" type "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parameter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("子类必须实现抽象方法，或者自定义为抽象类。")]),t._v(" "),s("h2",{attrs:{id:"使用final"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用final"}},[t._v("#")]),t._v(" 使用final")]),t._v(" "),s("p",[t._v("如何不想让父类的方法被重写，怎么办？ 使用final关键字。")]),t._v(" "),s("h3",{attrs:{id:"final阻止重写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#final阻止重写"}},[t._v("#")]),t._v(" final阻止重写")]),t._v(" "),s("p",[t._v("被final修饰的方法不能被重写")]),t._v(" "),s("h3",{attrs:{id:"final阻止继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#final阻止继承"}},[t._v("#")]),t._v(" final阻止继承")]),t._v(" "),s("p",[t._v("被final修饰的类不能被继承")]),t._v(" "),s("h3",{attrs:{id:"使用final修饰成员"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用final修饰成员"}},[t._v("#")]),t._v(" 使用final修饰成员")]),t._v(" "),s("p",[t._v("final修饰的成员不能被修改。因此在必须在定义时就进行初始化。")]),t._v(" "),s("h2",{attrs:{id:"object类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object类"}},[t._v("#")]),t._v(" Object类")]),t._v(" "),s("p",[t._v("Java中所有的类都隐式地继承Object类。")])])}),[],!1,null,null,null);a.default=e.exports}}]);